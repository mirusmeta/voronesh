from tkinter import ttk
from tkinter import *
import tkinter as tk
from PIL import ImageDraw, ImageTk, Image
import ctypes

class About_Window(Toplevel):
    def __init__(self, master=None):
        super().__init__(master)
        self.title("IT-cube –†–æ—Å—Ç–æ–≤")
        self.geometry(self.center_window(1300, 800))
        self.config(bg='#E6EEFF')
        self.iconbitmap('info.ico')
        self.protocol("WM_DELETE_WINDOW", self.dismiss)
        self.grab_set()

        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é"
        self.button_bg = self.create_rounded_rectangle(300, 80, 30, "#0074b4")  # –§–æ–Ω –∫–Ω–æ–ø–∫–∏
        self.button_hover_bg = self.create_rounded_rectangle(300, 80, 30, "#3472d6")  # –¶–≤–µ—Ç –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏

        self.close_button = tk.Button(self, text="–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é",
                                      image=self.button_bg,
                                      compound="center",
                                      fg="white",
                                      font=("Arial", 14, "bold"),
                                      bd=0,
                                      command=self.dismiss)
        self.close_button.place(x=990, y=10, width=300, height=80)
        self.close_button.image = self.button_bg
        self.close_button.bind("<Enter>", lambda e: self.on_enter(self.close_button))
        self.close_button.bind("<Leave>", lambda e: self.on_leave(self.close_button))
        self.info_bg = self.create_rounded_rectangle(350, 80, 30, "#0074b4")  # –§–æ–Ω –∑–∞–≥–æ–ª–æ–≤–∫–∞

        self.info_label = tk.Label(self, image=self.info_bg,
                                   text="–û –Ω–∞—Å", compound="center",
                                   fg="white",
                                   font=("Arial", 18, "bold"),
                                   bd=0)
        self.info_label.image = self.info_bg
        self.info_label.place(x=-50, y=0, width=350, height=80)
        self.title_bg = self.create_rounded_rectangle(400, 50, 20, "#0074b4")

        self.team_title = tk.Label(self, image=self.title_bg,
                                   text="–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞",
                                   compound="center",
                                   fg="white",
                                   font=("Arial", 20, "bold"),
                                   bd=0)
        self.team_title.image = self.title_bg
        self.team_title.place(x=450, y=220, width=400, height=50)

        # –§–æ–Ω –¥–ª—è —Ç–µ–∫—Å—Ç–∞ —Å —ç–º–æ–¥–∑–∏
        self.text_bg = self.create_rounded_rectangle(700, 300, 20, "#ffffff")

        # –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç —Å —ç–º–æ–¥–∑–∏
        self.info_text = tk.Label(self, image=self.text_bg,
                                  text=("–ú—ã ‚Äì –∫–æ–º–∞–Ω–¥–∞ IT-–ö—É–± –†–æ—Å—Ç–æ–≤, –∏ –Ω–∞ —ç—Ç–æ–º –∫–æ–Ω–∫—É—Ä—Å–µ –º—ã –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ–º "
                                        "–∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, —Å–æ–∑–¥–∞–Ω–Ω–æ–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Python –∏ Tkinter. üíª\n\n"
                                        "–ù–∞—à–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç –ø—Ä–æ—Å—Ç–æ—Ç—É, –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏. üé® "
                                        "–ú—ã –¥–æ–∫–∞–∑–∞–ª–∏, —á—Ç–æ –¥–∞–∂–µ –±–∞–∑–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã Python –º–æ–≥—É—Ç –±—ã—Ç—å –º–æ—â–Ω—ã–º "
                                        "–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–º –¥–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∏–¥–µ–π.\n\n"
                                        "–ú—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ —Ñ—É–Ω–∫—Ü–∏–∏, –∫–ª–∞—Å—Å—ã –∏ —Ü–∏–∫–ª—ã, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å —É–¥–æ–±–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å, "
                                        "–≤ –∫–æ—Ç–æ—Ä–æ–º –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç –ø—Ä–æ—Ä–∞–±–æ—Ç–∞–Ω —Å –≤–Ω–∏–º–∞–Ω–∏–µ–º –∫ –¥–µ—Ç–∞–ª—è–º. üöÄ\n\n"
                                        "IT-–ö—É–± –†–æ—Å—Ç–æ–≤ –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—Ç, —Ç–≤–æ—Ä–∏—Ç –∏ –≤–ø–µ—á–∞—Ç–ª—è–µ—Ç. –ì–æ—Ç–æ–≤—ã –∫ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º –±—É–¥—É—â–µ–≥–æ "
                                        "–≤–º–µ—Å—Ç–µ —Å –Ω–∞–º–∏? ‚ú®"),
                                  compound="center",
                                  fg="black",
                                  bg="#ffffff",
                                  wraplength=650,
                                  justify="center",
                                  font=("Arial", 16))
        self.info_text.image = self.text_bg
        self.info_text.place(x=300, y=300, width=700, height=300)

    def create_rounded_rectangle(self, width, height, radius, color):
        img = Image.new("RGBA", (width, height), (230, 238, 255, 256))
        draw = ImageDraw.Draw(img)
        draw.rounded_rectangle((0, 0, width, height), radius=radius, fill=color)
        return ImageTk.PhotoImage(img)

    def center_window(self, width, height):
        """–¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–∫–Ω–∞ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —ç–∫—Ä–∞–Ω–∞."""
        screen_width = self.winfo_screenwidth()
        screen_height = self.winfo_screenheight()
        x = (screen_width - width) // 2
        y = (screen_height - height) // 2
        return f"{width}x{height}+{x}+{y}"

    def on_enter(self, button):
        button.config(image=self.button_hover_bg)

    def on_leave(self, button):
        button.config(image=self.button_bg)

    def dismiss(self):
        self.grab_release()
        self.destroy()


if __name__ == "__main__":
    root = tk.Tk()
    root.withdraw()  # –°–∫—Ä—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ
    about_window = About_Window()
    root.mainloop()
